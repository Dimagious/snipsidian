#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

/**
 * –ü—Ä–æ—Å—Ç–æ–π CSS bundler –¥–ª—è —Å–±–æ—Ä–∫–∏ –º–æ–¥—É–ª–µ–π –≤ –æ–¥–∏–Ω —Ñ–∞–π–ª
 */
function buildCSS() {
  const cssDir = path.join(__dirname, '../src/styles');
  const outputFile = path.join(__dirname, '../styles.css');
  
  console.log('üî® Building CSS modules...');
  
  // –ß–∏—Ç–∞–µ–º –≥–ª–∞–≤–Ω—ã–π CSS —Ñ–∞–π–ª
  const mainCSS = fs.readFileSync(path.join(cssDir, 'main.css'), 'utf8');
  
  // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º @import –¥–∏—Ä–µ–∫—Ç–∏–≤—ã
  const processedCSS = processImports(mainCSS, cssDir);
  
  // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
  fs.writeFileSync(outputFile, processedCSS);
  
  console.log('‚úÖ CSS modules built successfully!');
  console.log(`üìÅ Output: ${outputFile}`);
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
  const lines = processedCSS.split('\n').length;
  console.log(`üìä Total lines: ${lines}`);
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç @import –¥–∏—Ä–µ–∫—Ç–∏–≤—ã –∏ –≤—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–æ–≤
 */
function processImports(css, baseDir) {
  return css.replace(/@import\s+['"]([^'"]+)['"];?/g, (match, importPath) => {
    const fullPath = path.resolve(baseDir, importPath);
    
    if (!fs.existsSync(fullPath)) {
      console.warn(`‚ö†Ô∏è  CSS file not found: ${fullPath}`);
      return match;
    }
    
    const content = fs.readFileSync(fullPath, 'utf8');
    console.log(`üì¶ Including: ${importPath}`);
    
    // –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏–º–ø–æ—Ä—Ç—ã –≤ –ø–æ–¥–∫–ª—é—á–∞–µ–º–æ–º —Ñ–∞–π–ª–µ
    return processImports(content, path.dirname(fullPath));
  });
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä–∫—É
if (require.main === module) {
  buildCSS();
}

module.exports = { buildCSS };
